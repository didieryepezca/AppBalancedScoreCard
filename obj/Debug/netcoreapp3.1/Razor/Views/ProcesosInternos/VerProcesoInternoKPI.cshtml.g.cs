#pragma checksum "C:\Workspace\OpplusBSC\Views\ProcesosInternos\VerProcesoInternoKPI.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "c0a8840f1e86c876c5a86eb6cdb048d811d1061f"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_ProcesosInternos_VerProcesoInternoKPI), @"mvc.1.0.view", @"/Views/ProcesosInternos/VerProcesoInternoKPI.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Workspace\OpplusBSC\Views\_ViewImports.cshtml"
using OpplusBSC;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Workspace\OpplusBSC\Views\_ViewImports.cshtml"
using OpplusBSC.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c0a8840f1e86c876c5a86eb6cdb048d811d1061f", @"/Views/ProcesosInternos/VerProcesoInternoKPI.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"fcd4374776d457b5dd6e1e24d719763cd07f6802", @"/Views/_ViewImports.cshtml")]
    public class Views_ProcesosInternos_VerProcesoInternoKPI : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "Dashboard", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "Main", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("btn btn-primary btn-sm waves-effect"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("selectpicker"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("multiple", new global::Microsoft.AspNetCore.Html.HtmlString(""), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "C:\Workspace\OpplusBSC\Views\ProcesosInternos\VerProcesoInternoKPI.cshtml"
  
    ViewData["Title"] = "VerProcesoInternoKPI";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<script type=\"text/javascript\">\r\n\r\n    var vIndicador = \'");
#nullable restore
#line 8 "C:\Workspace\OpplusBSC\Views\ProcesosInternos\VerProcesoInternoKPI.cshtml"
                 Write(ViewBag.indicador);

#line default
#line hidden
#nullable disable
            WriteLiteral("\';\r\n    var vPenaliza = \'");
#nullable restore
#line 9 "C:\Workspace\OpplusBSC\Views\ProcesosInternos\VerProcesoInternoKPI.cshtml"
                Write(ViewBag.penaliza);

#line default
#line hidden
#nullable disable
            WriteLiteral("\'\r\n\r\n    var vMes = \'");
#nullable restore
#line 11 "C:\Workspace\OpplusBSC\Views\ProcesosInternos\VerProcesoInternoKPI.cshtml"
           Write(ViewBag.MES);

#line default
#line hidden
#nullable disable
            WriteLiteral("\';\r\n    var vAnio = \'");
#nullable restore
#line 12 "C:\Workspace\OpplusBSC\Views\ProcesosInternos\VerProcesoInternoKPI.cshtml"
            Write(ViewBag.YEAR);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"';

    function load() {

        if (vIndicador == ""Cumplimiento ANS por Servicio"" && vPenaliza ==""SI"") {
          $('#linkDetalle').attr('href', ""/ProcesosInternos/VerProcesoInterno?indicador=""+ vIndicador+""&penaliza=SI&mes="" + vMes + '&anio=' + vAnio);
      } else {

          $('#linkDetalle').attr('href', ""/ProcesosInternos/VerProcesoInterno?indicador=""+ vIndicador+""&penaliza=NO&mes="" + vMes + '&anio=' + vAnio);
      }       

        fnArmarKPIs();
    };

    window.onload = load;

    serviciosArray = [];
    serviciosUnicosArray = [];

    function fnArmarKPIs() {        

        var encabezados = """";
        var cuerpo = """";        

        var url = ""/ProcesosInternos/FunListarProcesosInternos"";
        $.get(url, { mes: vMes, anio: vAnio, penaliza: vPenaliza }, function (data) {


            //console.log(data);            

            data.forEach(function (element) {
                serviciosArray.push(element.servicio);
            });

            var ");
            WriteLiteral(@"uniques = serviciosArray.filter(fnServiciosUnicos);
            serviciosUnicosArray = uniques; //metemos los nombres de los servicios unicos            
                  

            encabezados = encabezados + '<tr class=""info"">';

            encabezados = encabezados + '<th class=""active"">Servicio</th>';
            encabezados = encabezados + '<th class=""warning"">Ene</th>';
            encabezados = encabezados + '<th class=""warning"">Feb</th>';
            encabezados = encabezados + '<th class=""warning"">Mar</th>';
            encabezados = encabezados + '<th class=""warning"">Abr</th>';
            encabezados = encabezados + '<th class=""warning"">May</th>';
            encabezados = encabezados + '<th class=""warning"">Jun</th>';
            encabezados = encabezados + '<th class=""warning"">Jul</th>';
            encabezados = encabezados + '<th class=""warning"">Agos</th>';
            encabezados = encabezados + '<th class=""warning"" >Set</th>';
            encabezados = encabezados + '<th c");
            WriteLiteral(@"lass=""warning"">Oct</th>';
            encabezados = encabezados + '<th class=""warning"">Nov</th>';
            encabezados = encabezados + '<th class=""warning"">Dic</th>';

            encabezados = encabezados + '</tr>';

            //console.log(serviciosUnicosArray.length); 5           

            var arrayEne = [];
            var arrayFeb = [];
            var arrayMar = [];
            var arrayAbr = [];
            var arrayMay = [];
            var arrayJun = [];
            var arrayJul = [];
            var arrayAgo = [];
            var arraySet = [];
            var arrayOct = [];
            var arrayNov = [];
            var arrayDic = [];
           

            function ObjetoKpi(servicio, sumapesoxmes, sumapeso) {
            this.servicio = servicio;
                this.sumapesoxmes = sumapesoxmes; 
                this.sumapeso = sumapeso;                
            };           

            serviciosUnicosArray.forEach(function (item, index) {//iteramos por");
            WriteLiteral(@" cada uno de los servicios encontrados             


                let filtrados = data.filter(function (value) { //filtramos y agrupamos cada uno de los servicios
                    //console.log(value.servicio)
                    return value.servicio === item;
                });              

                //console.log(filtrados);

                filtrados.forEach(function (item, index) {    

                    //console.log(item.servicio);

                    for (i = 1; i < 13; i++) {
                       
                        if (i == 1) {
                            arrayEne.push(new ObjetoKpi(item.servicio, item.pesO_POND_CONTRATO * (item.enero * 100), item.pesO_POND_CONTRATO))                           
                        }if (i == 2) {                            
                            arrayFeb.push(new ObjetoKpi(item.servicio, item.pesO_POND_CONTRATO * (item.febrero * 100), item.pesO_POND_CONTRATO))
                            //console.log(item.pesO");
            WriteLiteral(@"_POND_CONTRATO * (item.febrero * 100) + ""--FEBRERO"")
                        } if (i == 3) {
                            arrayMar.push(new ObjetoKpi(item.servicio, item.pesO_POND_CONTRATO * (item.marzo * 100), item.pesO_POND_CONTRATO))
                            //console.log(item.pesO_POND_CONTRATO * (item.marzo * 100) + ""--marzo"")
                        } if (i == 4) {
                            arrayAbr.push(new ObjetoKpi(item.servicio, item.pesO_POND_CONTRATO * (item.abril * 100), item.pesO_POND_CONTRATO))
                            //console.log(item.pesO_POND_CONTRATO * (item.abril * 100) + ""--abril"")
                        } if (i == 5) {
                            arrayMay.push(new ObjetoKpi(item.servicio, item.pesO_POND_CONTRATO * (item.mayo * 100), item.pesO_POND_CONTRATO))
                            //console.log(item.pesO_POND_CONTRATO * (item.mayo * 100) + ""--mayo"")
                        } if (i == 6) {
                            arrayJun.push(new ObjetoKpi(item.servicio, ite");
            WriteLiteral(@"m.pesO_POND_CONTRATO * (item.junio * 100), item.pesO_POND_CONTRATO))
                            //console.log(item.pesO_POND_CONTRATO * (item.junio * 100) + ""--junio"")
                        } if (i == 7) {
                            arrayJul.push(new ObjetoKpi(item.servicio, item.pesO_POND_CONTRATO * (item.julio * 100), item.pesO_POND_CONTRATO))
                            //console.log(item.pesO_POND_CONTRATO * (item.julio * 100) + ""--julio"")
                        } if (i == 8) {
                            arrayAgo.push(new ObjetoKpi(item.servicio, item.pesO_POND_CONTRATO * (item.agosto * 100), item.pesO_POND_CONTRATO))
                            //console.log(item.pesO_POND_CONTRATO * (item.agosto * 100) + ""--agosto"")
                        } if (i == 9) {
                            arraySet.push(new ObjetoKpi(item.servicio, item.pesO_POND_CONTRATO * (item.setiembre * 100), item.pesO_POND_CONTRATO))
                            //console.log(item.pesO_POND_CONTRATO * (item.setiembre * 100");
            WriteLiteral(@") + ""--setiembre"")
                        } if (i == 10) {
                            arrayOct.push(new ObjetoKpi(item.servicio, item.pesO_POND_CONTRATO * (item.octubre * 100), item.pesO_POND_CONTRATO))
                            //console.log(item.pesO_POND_CONTRATO * (item.octubre * 100) + ""--octubre"")
                        } if (i == 11) {
                            arrayNov.push(new ObjetoKpi(item.servicio, item.pesO_POND_CONTRATO * (item.noviembre * 100), item.pesO_POND_CONTRATO))
                            //console.log(item.pesO_POND_CONTRATO * (item.noviembre * 100) + ""--noviembre"")
                        } if (i == 12) {
                            arrayDic.push(new ObjetoKpi(item.servicio, item.pesO_POND_CONTRATO * (item.diciembre * 100), item.pesO_POND_CONTRATO))
                            //console.log(item.pesO_POND_CONTRATO * (item.diciembre * 100) + ""--diciembre"")
                        }
                    }                    
                });                 
     ");
            WriteLiteral(@"           //console.log(""En el índice "" + index + "" hay este valor: "" + item);     
                
                
            });            

           
            //console.log(arrayEne);    


            //------------------------------------------ CUERPO DE TABLA

            //-------------------------------------- Objeto KPI que contendra el calculo
            function ObjetoKpiF(servicio, calculo) {
            this.servicio = servicio;
                this.calculo = calculo;                      
            };

            //-------------------------------------- suma de pesos x mes y suma de pesos, con GROUP BY SERVICIO de ENERO
            var h1 = {};         

            var ene = arrayEne.reduce(function(r, o) {
                var key = o.servicio;  
                if (!h1[key]) {
                    h1[key] = Object.assign({}, o);
                    r.push(h1[key]);
                } else {
                    h1[key].sumapesoxmes += o.sumapesoxmes;
     ");
            WriteLiteral(@"               h1[key].sumapeso += o.sumapeso;                    
              }
              return r;
            }, []);


            var arrayEneF = [];
            ene.forEach(function (item) {
                arrayEneF.push(new ObjetoKpiF(item.servicio, item.sumapesoxmes / item.sumapeso))
            });

            //console.log(arrayEneF);                    
            //-------------------------------------- suma de pesos x mes y suma de pesos, con GROUP BY SERVICIO de FEBRERO
            var h2 = {};         

            var feb = arrayFeb.reduce(function(r, o) {
                var key = o.servicio;  
                if (!h2[key]) {
                    h2[key] = Object.assign({}, o);
                    r.push(h2[key]);
                } else {
                    h2[key].sumapesoxmes += o.sumapesoxmes;
                    h2[key].sumapeso += o.sumapeso;                    
              }
              return r;
            }, []);


            var arrayFebF = ");
            WriteLiteral(@"[];
            feb.forEach(function (item) {
                arrayFebF.push(new ObjetoKpiF(item.servicio, item.sumapesoxmes / item.sumapeso))
            });

            //console.log(arrayFebF);   
            //-------------------------------------- suma de pesos x mes y suma de pesos, con GROUP BY SERVICIO de MARZO
            var h3 = {};          

            var mar = arrayMar.reduce(function(r, o) {
                var key = o.servicio;  
                if (!h3[key]) {
                    h3[key] = Object.assign({}, o);
                    r.push(h3[key]);
                } else {
                    h3[key].sumapesoxmes += o.sumapesoxmes;
                    h3[key].sumapeso += o.sumapeso;                    
              }
              return r;
            }, []);


            var arrayMarF = [];
            mar.forEach(function (item) {
                arrayMarF.push(new ObjetoKpiF(item.servicio, item.sumapesoxmes / item.sumapeso))
            });

            //co");
            WriteLiteral(@"nsole.log(arrayMarF);  
            //-------------------------------------- suma de pesos x mes y suma de pesos, con GROUP BY SERVICIO DE ABRIL

            var h4 = {};         

            var abr = arrayAbr.reduce(function(r, o) {
                var key = o.servicio;  
                if (!h4[key]) {
                    h4[key] = Object.assign({}, o);
                    r.push(h4[key]);
                } else {
                    h4[key].sumapesoxmes += o.sumapesoxmes;
                    h4[key].sumapeso += o.sumapeso;                    
              }
              return r;
            }, []);


            var arrayAbrF = [];
            abr.forEach(function (item) {
                arrayAbrF.push(new ObjetoKpiF(item.servicio, item.sumapesoxmes / item.sumapeso))
            });

            //console.log(arrayAbrF);

            //-------------------------------------- suma de pesos x mes y suma de pesos, con GROUP BY SERVICIO DE MAYO
            var h5 = {};         
");
            WriteLiteral(@"
            var may = arrayMay.reduce(function(r, o) {
                var key = o.servicio;  
                if (!h5[key]) {
                    h5[key] = Object.assign({}, o);
                    r.push(h5[key]);
                } else {
                    h5[key].sumapesoxmes += o.sumapesoxmes;
                    h5[key].sumapeso += o.sumapeso;                    
              }
              return r;
            }, []);


            var arrayMayF = [];
            may.forEach(function (item) {
                arrayMayF.push(new ObjetoKpiF(item.servicio, item.sumapesoxmes / item.sumapeso))
            });

            //console.log(arrayMayF);
            //-------------------------------------- suma de pesos x mes y suma de pesos, con GROUP BY SERVICIO DE JUNIO
            var h6 = {};         

            var jun = arrayJun.reduce(function(r, o) {
                var key = o.servicio;  
                if (!h6[key]) {
                    h6[key] = Object.assign({}, o);
");
            WriteLiteral(@"                    r.push(h6[key]);
                } else {
                    h6[key].sumapesoxmes += o.sumapesoxmes;
                    h6[key].sumapeso += o.sumapeso;                    
              }
              return r;
            }, []);


            var arrayJunF = [];
            jun.forEach(function (item) {
                arrayJunF.push(new ObjetoKpiF(item.servicio, item.sumapesoxmes / item.sumapeso))
            });

            //console.log(arrayJunF);

            //-------------------------------------- suma de pesos x mes y suma de pesos, con GROUP BY SERVICIO DE JULIO
            var h7 = {};         

            var jul = arrayJul.reduce(function(r, o) {
                var key = o.servicio;  
                if (!h7[key]) {
                    h7[key] = Object.assign({}, o);
                    r.push(h7[key]);
                } else {
                    h7[key].sumapesoxmes += o.sumapesoxmes;
                    h7[key].sumapeso += o.sumapeso;       ");
            WriteLiteral(@"             
              }
              return r;
            }, []);


            var arrayJulF = [];
            jul.forEach(function (item) {
                arrayJulF.push(new ObjetoKpiF(item.servicio, item.sumapesoxmes / item.sumapeso))
            });

            //console.log(arrayJulF);

            //-------------------------------------- suma de pesos x mes y suma de pesos, con GROUP BY SERVICIO DE AGOSTO
            var h8 = {};         

            var ago = arrayAgo.reduce(function(r, o) {
                var key = o.servicio;  
                if (!h8[key]) {
                    h8[key] = Object.assign({}, o);
                    r.push(h8[key]);
                } else {
                    h8[key].sumapesoxmes += o.sumapesoxmes;
                    h8[key].sumapeso += o.sumapeso;                    
              }
              return r;
            }, []);


            var arrayAgoF = [];
            ago.forEach(function (item) {
                arrayAgo");
            WriteLiteral(@"F.push(new ObjetoKpiF(item.servicio, item.sumapesoxmes / item.sumapeso))
            });

            //console.log(arrayAgoF);

            //-------------------------------------- suma de pesos x mes y suma de pesos, con GROUP BY SERVICIO DE SET
            var h9 = {};         

            var set = arraySet.reduce(function(r, o) {
                var key = o.servicio;  
                if (!h9[key]) {
                    h9[key] = Object.assign({}, o);
                    r.push(h9[key]);
                } else {
                    h9[key].sumapesoxmes += o.sumapesoxmes;
                    h9[key].sumapeso += o.sumapeso;                    
              }
              return r;
            }, []);


            var arraySetF = [];
            set.forEach(function (item) {
                arraySetF.push(new ObjetoKpiF(item.servicio, item.sumapesoxmes / item.sumapeso))
            });

            //console.log(arraySetF);

            //-------------------------------------");
            WriteLiteral(@"- suma de pesos x mes y suma de pesos, con GROUP BY SERVICIO DE OCTUBRE
            var h10 = {};         

            var oct = arrayOct.reduce(function(r, o) {
                var key = o.servicio;  
                if (!h10[key]) {
                    h10[key] = Object.assign({}, o);
                    r.push(h10[key]);
                } else {
                    h10[key].sumapesoxmes += o.sumapesoxmes;
                    h10[key].sumapeso += o.sumapeso;                    
              }
              return r;
            }, []);


            var arrayOctF = [];
            oct.forEach(function (item) {
                arrayOctF.push(new ObjetoKpiF(item.servicio, item.sumapesoxmes / item.sumapeso))
            });

            //console.log(arrayOctF);

            //-------------------------------------- suma de pesos x mes y suma de pesos, con GROUP BY SERVICIO DE NOVIEMBRE
            var h11 = {};         

            var nov = arrayNov.reduce(function(r, o) {
      ");
            WriteLiteral(@"          var key = o.servicio;  
                if (!h11[key]) {
                    h11[key] = Object.assign({}, o);
                    r.push(h11[key]);
                } else {
                    h11[key].sumapesoxmes += o.sumapesoxmes;
                    h11[key].sumapeso += o.sumapeso;                    
              }
              return r;
            }, []);


            var arrayNovF = [];
            nov.forEach(function (item) {
                arrayNovF.push(new ObjetoKpiF(item.servicio, item.sumapesoxmes / item.sumapeso))
            });

            //console.log(arrayNovF);

            //-------------------------------------- suma de pesos x mes y suma de pesos, con GROUP BY SERVICIO  DE DICIEMBRE
            var h12 = {};         

            var dic = arrayDic.reduce(function(r, o) {
                var key = o.servicio;  
                if (!h12[key]) {
                    h12[key] = Object.assign({}, o);
                    r.push(h12[key]);
          ");
            WriteLiteral(@"      } else {
                    h12[key].sumapesoxmes += o.sumapesoxmes;
                    h12[key].sumapeso += o.sumapeso;                    
              }
              return r;
            }, []);


            var arrayDicF = [];
            dic.forEach(function (item) {
                arrayDicF.push(new ObjetoKpiF(item.servicio, item.sumapesoxmes / item.sumapeso))
            });

            //console.log(arrayDicF);
            //--------------------------------------------------------------------------------------------FIN           

            var arrayAll = []; 

            arrayAll.push(arrayEneF, arrayFebF, arrayMarF, arrayAbrF, arrayMayF,
                            arrayJunF, arrayJulF, arrayAgoF, arraySetF,
                            arrayOctF, arrayNovF, arrayDicF);             

            //console.log(arrayAll);

            var vLongEverySingleArray = arrayEneF.length; // para obtener la longitud de cada uno de los arrays servicios           

     ");
            WriteLiteral(@"       //console.log(vLongEverySingleArray);
            //----------------For para cada uno de los 5 elementos que tiene cada uno de los 12 sub Array
            for (i = 0; i <= vLongEverySingleArray - 1; i++) {                

                cuerpo = cuerpo + '<tr>'
                //titulo de los servicios
                cuerpo = cuerpo + '<td><medium style=""color: blue"">' + arrayAll[0][i].servicio + '</medium></td>';

                //----------------------------For para los 12 arrays
                for (j = 0; j <= arrayAll.length - 1; j++) {

                    //valores de enero a diciembre

                    if (arrayAll[j][i].calculo < 100) {

                        cuerpo = cuerpo + '<td><medium style=""color: red"">' + arrayAll[j][i].calculo + '</medium></td>';
                    } else {

                        cuerpo = cuerpo + '<td><medium style=""color: green"">' + arrayAll[j][i].calculo + '</medium></td>';
                    }

                    
              ");
            WriteLiteral(@"  }              
                 cuerpo = cuerpo + '</tr>'; 
            }          
          
            $('#tbBodyKpis').append(cuerpo).fadeIn(300000);
            $('#tbHeadKpis').append(encabezados).fadeIn(300000);           

        });

    }

    function fnServiciosUnicos(value, index, self) {
          return self.indexOf(value) === index;
    }

    function fnGraficar() {

         console.log(serviciosUnicosArray);   


        //var table = document.getElementById(""data-table-basic"");

        //    for (var i = 0, row; row = table.rows[i]; i++) {
        //       //iterate through rows
        //       //rows would be accessed using the ""row"" variable assigned in the for loop                
        //       for (var j = 0, col; col = row.cells[j]; j++) {
        //         //iterate through columns
        //         //columns would be accessed using the ""col"" variable assigned in the for loop
        //           console.log(col.innerHTML);
        //       } ");
            WriteLiteral(@" 
        //    }


    }


</script>

<br />


<div class=""row"">

    <div class=""col-lg-12 col-md-12 col-sm-12 col-xs-12"">

        <div class=""form-element-list"">
            <div class=""curved-inner-pro"">
                <div class=""curved-ctn"">
                    <h2>Dashboard / ");
#nullable restore
#line 515 "C:\Workspace\OpplusBSC\Views\ProcesosInternos\VerProcesoInternoKPI.cshtml"
                               Write(ViewBag.indicador);

#line default
#line hidden
#nullable disable
            WriteLiteral(@" </h2>
                </div>
            </div>

            <div class=""row"">


                <div class=""col-lg-4 col-md-4 col-sm-4 col-xs-12"">
                    <div class=""nk-int-mk sl-dp-mn"">
                        <h2 style=""color:white"">_</h2>
                    </div>
                    <div class=""btn-list"">
                        <a id=""linkDetalle""
                           class=""btn btn-info notika-btn-info waves-effect"">Ver Detalle</a>
                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c0a8840f1e86c876c5a86eb6cdb048d811d1061f28473", async() => {
                WriteLiteral("Volver al Dashboard");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                    </div>
                </div>

            </div>

        </div>
    </div>
</div>

<br />

<div class=""row"">

    <div class=""data-table-area"">

        <div class=""row"">

            <div class=""col-lg-12 col-md-12 col-sm-12 col-xs-12"">
                <div class=""data-table-list"">
                    <div class=""basic-tb-hd"">
                        <h2>Tabla de KPIs por Servicio</h2>
                        <p>A continuacion se muestra el porcentaje de los resultados por servicio.</p>

                        <div class=""nk-int-mk sl-dp-mn mg-t-30"">
                            <h2>Graficar</h2>
                        </div>
                        <div class=""bootstrap-select"">
                            <div class=""btn-group bootstrap-select show-tick"" id=""selectServicios"">
                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("select", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c0a8840f1e86c876c5a86eb6cdb048d811d1061f30823", async() => {
                WriteLiteral("\r\n");
                WriteLiteral("                            ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper);
#nullable restore
#line 558 "C:\Workspace\OpplusBSC\Views\ProcesosInternos\VerProcesoInternoKPI.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items = (new SelectList(ViewBag.servicios, "Servicio", "Servicio"));

#line default
#line hidden
#nullable disable
            __tagHelperExecutionContext.AddTagHelperAttribute("asp-items", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"

                            </div>
                        </div>


                        <br />
                        <br />
                        <br />



                    </div>

                    <div class=""table-responsive"">
                        <table id=""data-table-basic"" class=""table table-striped"">

                            <thead id=""tbHeadKpis"">

                            </thead>

                            <tbody id=""tbBodyKpis"">
                            </tbody>

                            <tfoot>


                            </tfoot>

                        </table>

                        <a class=""btn btn-danger notika-btn-danger waves-effect"" 
                           style=""float: right;""
                           onclick=""fnGraficar();"">Graficar</a>
                    </div>

                    

                </div>               

            </div>
        </div>

    </div>

</div>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
